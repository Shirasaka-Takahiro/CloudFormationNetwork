AWSTemplateFormatVersion: "2010-09-09"
Description: 
  CloudFront and S3 for Website hosting

Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label: 
          default: "CloudFront and S3 Configuration"
        Parameters: 
          - WebsiteDomainName
          - CFSSLCertificateId

    ParameterLabels: 
      WebsiteDomainName: 
        default: "WebsiteDomainName"
      CFSSLCertificateId: 
        default: "CFSSLCertificateId"

# Input Parameters
Parameters:
  WebsiteDomainName:
    Type: String
  CFSSLCertificateId:
    Type: String
  IamUserPassword:
    Description: IAM user password
    Type: String
    Default: Aaabbbccc1!
  IamUserName:
    Description: IAM user name
    Type: String
    Default: test-user

Resources:
# S3 Bucket   
  WebSiteHostingBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref WebsiteDomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      LoggingConfiguration:
        DestinationBucketName: !Ref 'S3AcessLogBucket'
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: Name
          Value: !Sub "${WebsiteDomainName}-hosting-bucket"
  S3AcessLogBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${WebsiteDomainName}-s3-accesslog-bucket"
      AccessControl: LogDeliveryWrite
      Tags:
        - Key: Name
          Value: !Sub "${WebsiteDomainName}-s3-accesslog-bucket"
  CFAccessLogBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Sub "${WebsiteDomainName}-cf-accesslog-bucket"
      AccessControl: LogDeliveryWrite
      Tags:
        - Key: Name
          Value: !Sub "${WebsiteDomainName}-cf-accesslog-bucket"
  
  WebSiteHostingBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref WebSiteHostingBucket
      PolicyDocument:
        Statement:
        - Action: "s3:GetObject"
          Effect: Allow
          Resource: !Sub "arn:aws:s3:::${WebSiteHostingBucket}/*"
          Principal: '*'

# CloudFront
  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        PriceClass: PriceClass_All
        Aliases:
        - !Ref WebsiteDomainName
        Origins:
        - CustomOriginConfig:
            OriginProtocolPolicy: http-only
          DomainName: !Sub "${WebsiteDomainName}.s3-website-ap-northeast-1.amazonaws.com"
          Id: !Sub "S3-Website-${WebsiteDomainName}.s3-website-ap-northeast-1.amazonaws.com"
        Logging:
          IncludeCookies: "false"
          Bucket: !Sub "${WebsiteDomainName}-cf-accesslog-bucket.s3.ap-northeast-1.amazonaws.com"
        DefaultCacheBehavior:
          TargetOriginId: !Sub "S3-Website-${WebsiteDomainName}.s3-website-ap-northeast-1.amazonaws.com"
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
          - GET
          - HEAD
          CachedMethods:
          - GET
          - HEAD
          DefaultTTL: 300
          MaxTTL: 86400
          MinTTL: 60
          Compress: true
          ForwardedValues:
            Cookies:
              Forward: none
            QueryString: false
        ViewerCertificate:
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016
          AcmCertificateArn: !Sub "arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/${CFSSLCertificateId}"
        HttpVersion: http2
        Enabled: true
  
# IAM Role
  IamRoleS3access:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "IAM-role-${WebsiteDomainName}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Ref "User1"
            Action: sts:AssumeRole
            Condition:
              IpAddress:
                aws:SourceIp:
                  - 0.0.0.0/0
                  - ::/0
      Policies:
        - PolicyName: !Sub "S3accessPolicy-${WebsiteDomainName}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - s3:*
                Resource:
                  - !Sub "arn:aws:s3:::${WebsiteDomainName}/*"
                  - !Sub "arn:aws:s3:::${WebsiteDomainName}"
              - Effect: Deny
                Action:
                  - s3:PutBucket*
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutObjectAcl
                  - s3:PutObjectVersionAcl
                Resource:
                  - arn:aws:s3:::*
              - Effect: Allow
                Action:
                  - cloudfront:Get*
                  - cloudfront:List*
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - cloudfront:CreateInvalidation
                Resource:
                  - !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}"
# IAM User           
  User1:
    Type: "AWS::IAM::User"
    Properties:
      LoginProfile:
        Password: !Ref IamUserPassword
        PasswordResetRequired: false
      Policies: 
        - !Ref PolicyName 
      UserName: !Ref IamUserName
  IAMUserAccessKey:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref IamUserName